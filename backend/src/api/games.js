import { Router } from 'express'
import pool from '../lib/db.js'
import fetch from 'node-fetch'
const router=Router()
router.get('/',async(req,res)=>{try{const url='https://site.api.espn.com/apis/site/v2/sports/football/nfl/scoreboard';let games=[];try{const j=await (await fetch(url)).json();games=(j.events||[]).map(ev=>({game_id:ev.id,week:j.week?.number??null,home_team:ev.competitions?.[0]?.competitors?.find(c=>c.homeAway==='home')?.team?.displayName,away_team:ev.competitions?.[0]?.competitors?.find(c=>c.homeAway==='away')?.team?.displayName,home_team_id:ev.competitions?.[0]?.competitors?.find(c=>c.homeAway==='home')?.team?.id,away_team_id:ev.competitions?.[0]?.competitors?.find(c=>c.homeAway==='away')?.team?.id,kickoff_ts:ev.date,venue:ev.competitions?.[0]?.venue?.fullName??null}))}catch{}if(!games.length){const {rows}=await pool.query('SELECT game_id, week, home_team_id as home_team, away_team_id as away_team, kickoff_ts, venue FROM games ORDER BY kickoff_ts ASC LIMIT 32');games=rows}res.json({games})}catch(e){res.status(500).json({error:String(e)})}})
router.get('/:id',async(req,res)=>{const gameId=req.params.id;try{const url='https://site.api.espn.com/apis/site/v2/sports/football/nfl/scoreboard';let meta=null;try{const j=await (await fetch(url)).json();const ev=(j.events||[]).find(e=>e.id===gameId);if(ev){const comp=ev.competitions?.[0];meta={game_id:ev.id,week:j.week?.number??null,home_team:comp?.competitors?.find(c=>c.homeAway==='home')?.team?.displayName,away_team:comp?.competitors?.find(c=>c.homeAway==='away')?.team?.displayName,home_team_id:comp?.competitors?.find(c=>c.homeAway==='home')?.team?.id,away_team_id:comp?.competitors?.find(c=>c.homeAway==='away')?.team?.id,kickoff_ts:ev.date,venue:comp?.venue?.fullName??null}}}catch{}if(!meta){meta={game_id:gameId,home_team:'Home',away_team:'Away',kickoff_ts:new Date().toISOString(),venue:null,week:null}}res.json(meta)}catch(e){res.status(500).json({error:String(e)})}})
export default router
